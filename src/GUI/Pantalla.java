/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Logica.java.Process_Image;
import Logica.java.Simulation;
import java.io.File;
import java.io.FileNotFoundException;
import javax.swing.JFileChooser;

/**
 *
 * @author carlo_7ogoiii
 */
public class Pantalla extends javax.swing.JFrame {
    Simulation simulation;
    /**
     * Creates new form Pantalla
     */
    public Pantalla(Simulation simulation) {
        initComponents();
        this.simulation = simulation;
        this.textArea_loadedProcesses.setText(this.simulation.showProcessJSON());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        CrearProceso = new javax.swing.JPanel();
        txtDuracion = new javax.swing.JLabel();
        txtDuracion.setVisible(false);
        fieldCiclos = new javax.swing.JTextField();
        txtCiclo2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JLabel();
        txtCiclo1 = new javax.swing.JLabel();
        txtCiclo1.setVisible(false);
        fieldNombre = new javax.swing.JTextField();
        fieldNombre.setVisible(false);
        fieldDuracion = new javax.swing.JTextField();
        fieldDuracion.setVisible(false);
        txtCrearProceso = new javax.swing.JLabel();
        txtCiclo3 = new javax.swing.JLabel();
        txtCiclo4 = new javax.swing.JLabel();
        txtCiclo4.setVisible(false);
        fieldCiclos2 = new javax.swing.JTextField();
        opcion1 = new javax.swing.JButton();
        opcion2 = new javax.swing.JButton();
        botonCrear = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        button_loadFile = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        fileChooserStateMessage = new javax.swing.JTextPane();
        fieldinstructionCycle = new javax.swing.JTextField();
        fieldactiveCPU = new javax.swing.JTextField();
        txtinstructionCycle = new javax.swing.JLabel();
        txtActiveCPU = new javax.swing.JLabel();
        botonConfirmarValores = new javax.swing.JButton();
        txtLoadFiles = new javax.swing.JLabel();
        button_loadFile2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        fileChooserStateMessage1 = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea_loadedProcesses = new javax.swing.JTextArea();
        txtLoadedProcesses = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CrearProceso.setLayout(null);

        txtDuracion.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtDuracion.setText("Duración:");
        CrearProceso.add(txtDuracion);
        txtDuracion.setBounds(260, 150, 101, 32);

        fieldCiclos.setVisible(false);
        fieldCiclos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCiclosActionPerformed(evt);
            }
        });
        CrearProceso.add(fieldCiclos);
        fieldCiclos.setBounds(380, 220, 251, 36);

        txtCiclo2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtCiclo2.setText("una interrupción:");
        txtCiclo2.setVisible(false);
        CrearProceso.add(txtCiclo2);
        txtCiclo2.setBounds(180, 220, 182, 50);

        txtNombre.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtNombre.setText("Nombre:");
        txtNombre.setVisible(false);
        CrearProceso.add(txtNombre);
        txtNombre.setBounds(270, 90, 100, 32);

        txtCiclo1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtCiclo1.setText("Ciclos para generar");
        CrearProceso.add(txtCiclo1);
        txtCiclo1.setBounds(160, 200, 204, 32);

        fieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNombreActionPerformed(evt);
            }
        });
        CrearProceso.add(fieldNombre);
        fieldNombre.setBounds(380, 90, 251, 35);

        fieldDuracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldDuracionActionPerformed(evt);
            }
        });
        CrearProceso.add(fieldDuracion);
        fieldDuracion.setBounds(380, 150, 251, 35);

        txtCrearProceso.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        txtCrearProceso.setText("Crear un proceso");
        CrearProceso.add(txtCrearProceso);
        txtCrearProceso.setBounds(260, 0, 390, 64);

        txtCiclo3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtCiclo3.setText("Ciclos para satisfacer");
        txtCiclo3.setVisible(false);
        CrearProceso.add(txtCiclo3);
        txtCiclo3.setBounds(150, 270, 220, 30);

        txtCiclo4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtCiclo4.setText("una interrupción:");
        CrearProceso.add(txtCiclo4);
        txtCiclo4.setBounds(180, 300, 182, 32);

        fieldCiclos2.setVisible(false);
        fieldCiclos2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCiclos2ActionPerformed(evt);
            }
        });
        CrearProceso.add(fieldCiclos2);
        fieldCiclos2.setBounds(380, 290, 251, 38);

        opcion1.setText("CPU Bound");
        opcion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcion1ActionPerformed(evt);
            }
        });
        CrearProceso.add(opcion1);
        opcion1.setBounds(720, 90, 160, 50);

        opcion2.setText("I/O Bound");
        opcion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcion2ActionPerformed(evt);
            }
        });
        CrearProceso.add(opcion2);
        opcion2.setBounds(720, 170, 160, 50);

        botonCrear.setText("Crear");
        botonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCrearActionPerformed(evt);
            }
        });
        CrearProceso.add(botonCrear);
        botonCrear.setBounds(550, 350, 72, 22);

        jTabbedPane1.addTab("Crear proceso", CrearProceso);

        button_loadFile.setText("Cargar  Parámetros");
        button_loadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_loadFileActionPerformed(evt);
            }
        });

        fileChooserStateMessage.setEditable(false);
        fileChooserStateMessage.setText("Cargue los parámetros iniciales de la simulación.");
        jScrollPane2.setViewportView(fileChooserStateMessage);

        fieldinstructionCycle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldinstructionCycleActionPerformed(evt);
            }
        });

        fieldactiveCPU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldactiveCPUActionPerformed(evt);
            }
        });

        txtinstructionCycle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtinstructionCycle.setText("Duración del Ciclo de la Instrucción:");

        txtActiveCPU.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtActiveCPU.setText("Cantidad de Procesadores Activos:");

        botonConfirmarValores.setText("Confirmar Valores");
        botonConfirmarValores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConfirmarValoresActionPerformed(evt);
            }
        });

        txtLoadFiles.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        txtLoadFiles.setText("Carga de Archivos");

        button_loadFile2.setText("Cargar  Procesos");
        button_loadFile2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_loadFile2ActionPerformed(evt);
            }
        });

        fileChooserStateMessage1.setEditable(false);
        fileChooserStateMessage1.setText("Cargue procesos a ejecutar para la simulación.");
        jScrollPane3.setViewportView(fileChooserStateMessage1);

        textArea_loadedProcesses.setColumns(20);
        textArea_loadedProcesses.setRows(5);
        jScrollPane1.setViewportView(textArea_loadedProcesses);

        txtLoadedProcesses.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtLoadedProcesses.setText("Procesos cargados:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(305, 305, 305)
                .addComponent(txtLoadFiles)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtActiveCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtinstructionCycle, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fieldinstructionCycle)
                                    .addComponent(fieldactiveCPU)))
                            .addComponent(jScrollPane1))
                        .addGap(210, 210, 210))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtLoadedProcesses, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(109, 109, 109))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(botonConfirmarValores)
                        .addGap(81, 81, 81))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(button_loadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(144, 144, 144))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(button_loadFile2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(143, 143, 143))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(txtLoadFiles)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtinstructionCycle)
                            .addComponent(fieldinstructionCycle, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))
                    .addComponent(button_loadFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtActiveCPU)
                            .addComponent(fieldactiveCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(txtLoadedProcesses)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(button_loadFile2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonConfirmarValores)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))))
        );

        jTabbedPane1.addTab("Carga de Archivos", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1047, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 419, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab3", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldCiclosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCiclosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCiclosActionPerformed

    private void fieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldNombreActionPerformed

    private void fieldDuracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldDuracionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldDuracionActionPerformed

    private void fieldCiclos2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCiclos2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCiclos2ActionPerformed

    private void opcion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcion1ActionPerformed
        txtNombre.setVisible(true);
        txtDuracion.setVisible(true);
        fieldDuracion.setVisible(true);
        fieldNombre.setVisible(true);
        txtCiclo1.setVisible(false);
        txtCiclo2.setVisible(false);
        txtCiclo3.setVisible(false);
        txtCiclo4.setVisible(false);
        fieldCiclos.setVisible(false);
        fieldCiclos2.setVisible(false);
        
        fieldCiclos.setText("");
        fieldCiclos2.setText("");
        
    }//GEN-LAST:event_opcion1ActionPerformed

    private void opcion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcion2ActionPerformed
        txtNombre.setVisible(true);
        txtDuracion.setVisible(true);
        fieldDuracion.setVisible(true);
        fieldNombre.setVisible(true);
        txtCiclo1.setVisible(true);
        txtCiclo2.setVisible(true);
        txtCiclo3.setVisible(true);
        txtCiclo4.setVisible(true);
        fieldCiclos.setVisible(true);
        fieldCiclos2.setVisible(true);
    }//GEN-LAST:event_opcion2ActionPerformed

    private void botonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCrearActionPerformed
         if (evt.getSource()==botonCrear){
            int duracionInt=0;
                try {
                    String duracionString = fieldDuracion.getText();
                    duracionInt = Integer.parseInt(duracionString);
                    if (fieldCiclos.getText().isBlank() && fieldCiclos2.getText().isBlank()) {
                        // Es CPU Bound.
                        Process_Image process_CPUBound = new Process_Image(fieldNombre.getText(),duracionInt);
                        this.simulation.addProcessImage(process_CPUBound);
                        this.textArea_loadedProcesses.setText(this.simulation.showProcessJSON());
                    }else{
                        // Es I/O Bound.
                        int ciclosInt = 0;
                        int ciclos2Int = 0;
                            try {
                                String ciclosString = fieldCiclos.getText();
                                String ciclos2String = fieldCiclos2.getText();
                                ciclosInt = Integer.parseInt(ciclosString);
                                ciclos2Int = Integer.parseInt(ciclos2String);
                                Process_Image process_IOBound = new Process_Image(fieldNombre.getText(),duracionInt,ciclosInt,ciclos2Int);
                                this.simulation.addProcessImage(process_IOBound);
                                this.textArea_loadedProcesses.setText(this.simulation.showProcessJSON());
                            } catch (NumberFormatException e) {
                                fieldCiclos.setText("Llene ambos parámetros finales con números válidos.");
                                fieldCiclos2.setText("Llene ambos parámetros finales con números válidos.");
                            }
                    }
                } catch (NumberFormatException e) {
                    fieldDuracion.setText("Ingrese un número válido.");
                }
        }
    }//GEN-LAST:event_botonCrearActionPerformed

    private void button_loadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_loadFileActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int selection = fileChooser.showSaveDialog(jTabbedPane1);
        if (selection == JFileChooser.APPROVE_OPTION) {
            File loadedFile = fileChooser.getSelectedFile();
            try {
                String readData = simulation.readFile(loadedFile);
                String[] initialParams = readData.split("\n");
                this.fieldinstructionCycle.setText(initialParams[0]);
                this.fieldactiveCPU.setText(initialParams[1]);
                
            } catch (FileNotFoundException ex) {
                fileChooserStateMessage.setText("Ha ocurrido un error. Cargue de nuevo.");
            }
            fileChooserStateMessage.setText("Archivo cargado.");
        } else if (selection == JFileChooser.CANCEL_OPTION) {
            fileChooserStateMessage.setText("No se ha seleccionado ningún archivo.");
        }
    }//GEN-LAST:event_button_loadFileActionPerformed

    private void fieldinstructionCycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldinstructionCycleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldinstructionCycleActionPerformed

    private void fieldactiveCPUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldactiveCPUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldactiveCPUActionPerformed

    private void botonConfirmarValoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConfirmarValoresActionPerformed
        try{
            int[] initialParams_int = {(Integer.parseInt(this.fieldinstructionCycle.getText())),(Integer.parseInt(this.fieldactiveCPU.getText()))};
            this.simulation.setInstructionCycle_duration(initialParams_int[0]);
            this.simulation.setActiveCPU_ammount(initialParams_int[1]);
            fileChooserStateMessage.setText("Parámetros iniciales confirmados.");
            fileChooserStateMessage1.setText("Procesos iniciales confirmados.");
            this.simulation.createTxt();
            this.simulation.createJSON();
        }catch (NumberFormatException e){
            this.fieldinstructionCycle.setText("❌");
            this.fieldactiveCPU.setText("❌");
            fileChooserStateMessage.setText("Valores inválidos. Ingrese valores numéricos.");
        }
    }//GEN-LAST:event_botonConfirmarValoresActionPerformed

    private void button_loadFile2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_loadFile2ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int selection = fileChooser.showSaveDialog(jTabbedPane1);
        if (selection == JFileChooser.APPROVE_OPTION) {
            File loadedFile = fileChooser.getSelectedFile();
            try {
                String readData = simulation.readFile(loadedFile);
                this.simulation.addProcessesFromJSON(readData);
                this.textArea_loadedProcesses.setText(this.simulation.showProcessJSON());
                
            } catch (FileNotFoundException ex) {
                fileChooserStateMessage1.setText("Ha ocurrido un error. Cargue de nuevo.");
            }
            fileChooserStateMessage1.setText("Archivo cargado.");
        } else if (selection == JFileChooser.CANCEL_OPTION) {
            fileChooserStateMessage1.setText("No se ha seleccionado ningún archivo.");
        }
    }//GEN-LAST:event_button_loadFile2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CrearProceso;
    private javax.swing.JButton botonConfirmarValores;
    private javax.swing.JButton botonCrear;
    private javax.swing.JButton button_loadFile;
    private javax.swing.JButton button_loadFile2;
    private javax.swing.JTextField fieldCiclos;
    private javax.swing.JTextField fieldCiclos2;
    private javax.swing.JTextField fieldDuracion;
    private javax.swing.JTextField fieldNombre;
    private javax.swing.JTextField fieldactiveCPU;
    private javax.swing.JTextField fieldinstructionCycle;
    private javax.swing.JTextPane fileChooserStateMessage;
    private javax.swing.JTextPane fileChooserStateMessage1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton opcion1;
    private javax.swing.JButton opcion2;
    private javax.swing.JTextArea textArea_loadedProcesses;
    private javax.swing.JLabel txtActiveCPU;
    private javax.swing.JLabel txtCiclo1;
    private javax.swing.JLabel txtCiclo2;
    private javax.swing.JLabel txtCiclo3;
    private javax.swing.JLabel txtCiclo4;
    private javax.swing.JLabel txtCrearProceso;
    private javax.swing.JLabel txtDuracion;
    private javax.swing.JLabel txtLoadFiles;
    private javax.swing.JLabel txtLoadedProcesses;
    private javax.swing.JLabel txtNombre;
    private javax.swing.JLabel txtinstructionCycle;
    // End of variables declaration//GEN-END:variables
}
